{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [load, setLoad] = useState(false);\n  const [error, setError] = useState(null);\n  const [method, setMethod] = useState(null);\n  const [config, setConfig] = useState(null);\n  const [callFetch, setCallFetch] = useState(false);\n  const [itemId, setItemId] = useState(null);\n  const httpConfig = (registres, method) => {\n    if (method === \"POST\") {\n      setConfig({\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(registres)\n      });\n      setMethod(method);\n    } else if (method === \"DELETE\") {\n      setConfig({\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setMethod(\"DELETE\");\n      setItemId(data);\n    }\n  };\n  useEffect(() => {\n    const httpGet = async () => {\n      setLoad(true);\n      try {\n        const response = await fetch(url);\n        const json = await response.json();\n        setData(json);\n        setError(null);\n      } catch (e) {\n        setError(\"Erro ao executar 'GET'\");\n        setData(null);\n      }\n      setLoad(false);\n    };\n    httpGet();\n  }, [url, callFetch]);\n  useEffect(() => {\n    const httpRequest = async () => {\n      setLoad(true);\n      if (method === \"POST\") {\n        try {\n          const fetchOptions = [url, config];\n          const response = await fetch(...fetchOptions);\n          const dataJson = response.json();\n          setCallFetch(dataJson);\n          setError(null);\n        } catch (e) {\n          setData(null);\n          setError(\"Erro ao inserir Datos 'POST'\");\n        }\n      } else if (method === \"DELETE\") {\n        const deleteUrl = `${url}/${itemId}`;\n        const res = await fetch(deleteUrl, config);\n        const json = await res.json();\n        setCallFetch(json);\n      }\n      setLoad(false);\n    };\n    httpRequest();\n  }, [config], method, url);\n  return {\n    data,\n    load,\n    error,\n    httpConfig\n  };\n};\n_s(useFetch, \"h8iHSWomLHKfzYbZJHAy1xFRPeM=\");","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","load","setLoad","error","setError","method","setMethod","config","setConfig","callFetch","setCallFetch","itemId","setItemId","httpConfig","registres","headers","body","JSON","stringify","httpGet","response","fetch","json","e","httpRequest","fetchOptions","dataJson","deleteUrl","res"],"sources":["C:/projetos/Market_React/marketup/src/hook/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport const useFetch = (url) => {\r\n\r\n    const [data, setData] = useState(null);\r\n    const [load, setLoad] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const [method, setMethod] = useState(null);\r\n    const [config, setConfig] = useState(null);\r\n    const [callFetch, setCallFetch] = useState(false);\r\n\r\n    const [itemId, setItemId] = useState(null);\r\n\r\n    const httpConfig = (registres, method) => {\r\n        if (method === \"POST\") {\r\n            setConfig({\r\n                method,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(registres)\r\n            })\r\n            setMethod(method);\r\n        } else if (method === \"DELETE\") {\r\n            setConfig({\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            });\r\n\r\n            setMethod(\"DELETE\");\r\n            setItemId(data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const httpGet = async () => {\r\n            setLoad(true);\r\n            try {\r\n                const response = await fetch(url);\r\n                const json = await response.json();\r\n                setData(json);\r\n                setError(null);\r\n            } catch (e) {\r\n                setError(\"Erro ao executar 'GET'\")\r\n                setData(null)\r\n            }\r\n            setLoad(false)\r\n        }\r\n        httpGet();\r\n\r\n    }, [url, callFetch]);\r\n\r\n\r\n    useEffect(() => {\r\n        const httpRequest = async () => {\r\n            setLoad(true);\r\n            if (method === \"POST\") {\r\n                try {\r\n                    const fetchOptions = [url, config];\r\n                    const response = await fetch(...fetchOptions);\r\n                    const dataJson = response.json();\r\n                    setCallFetch(dataJson);\r\n                    setError(null);\r\n                } catch (e) {\r\n                    setData(null);\r\n                    setError(\"Erro ao inserir Datos 'POST'\")\r\n                }\r\n            } else if (method === \"DELETE\") {\r\n                const deleteUrl = `${url}/${itemId}`;\r\n\r\n                const res = await fetch(deleteUrl, config);\r\n\r\n                const json = await res.json();\r\n\r\n                setCallFetch(json);\r\n            }\r\n            setLoad(false);\r\n        };\r\n        httpRequest();\r\n    }, [config], method, url);\r\n\r\n\r\n    return { data, load, error, httpConfig }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}